
#
# Program name:		problem3.s
# Author: 		Jack Williams
# Date: 		4/6/24
# Purpose: 		Write a program to allow a user to guess a random number generated by the 
#			computer from 1 to maximum (the user should enter the maximum value to guess). 
#			In this program the user will enter the value of maximum. The user will then 
#			enter guesses and the program should print out if the guess is too high or too 
#			low until the user guesses the correct number. The program should print out 
#			the number of guesses the user took.

# Program Dictionary
# r4 - maxNum
# r5 - secretNum
# r6 - guess
# r7 - guessCounter

.text
.global main

main:
	#Push the stack
	SUB sp, sp, #4
	STR lr, [sp, #0]

	#Prompt
	LDR r0, =prompt1
	BL printf
	LDR r0, =prompt2
	BL printf
	LDR r0, =prompt3
	BL printf
	LDR r0, =prompt4
	BL printf
	LDR r0, =formatNum
	LDR r1, =maxNum
	BL scanf
	LDR r4, =maxNum
	LDR r4, [r4, #0]

	#Generate random number between 1 and [maxNumber]
	#while(dividend >= divisor) {dividend = dividend - divisor}
	#initialize. r0 is dividend. r1 is divisor.
	BL rand
	MOV r1, r4
	
	StartRandLoop:
		#check end condition
		CMP r0, r1
		BLT EndRandLoop
	
		#loop block
		SUB r0, r0, r1
		B StartRandLoop
	EndRandLoop:	
	MOV r5, r0

	#initialize Sentinel Loop
	LDR r0, =promptGuess
	BL printf
	LDR r0, =formatNum
	LDR r1, =guess
	BL scanf
	LDR r6, =guess
	LDR r6, [r6, #0]
	MOV r7, #1
	
	StartSentinelLoop:
		CMP r6, r5
		BEQ EndSentinelLoop
			#implement loop block
			
			#if(guess>secretNum) else
			CMP r6, r5
			BLT else
				LDR r0, =tooHigh
				BL printf
				B endIf
			else:
				LDR r0, =tooLow
				BL printf
			endIf:

			#get next value
			LDR r0, =promptGuess
			BL printf
			LDR r0, =formatNum
			LDR r1, =guess
			BL scanf
			LDR r6, =guess
			LDR r6, [r6, #0]
			ADD r7, r7, #1
			#branch to start loop
			B StartSentinelLoop
	EndSentinelLoop:
	
	LDR r0, =success
	MOV r1, r7
	BL printf

	#Pop the stack
	LDR lr, [sp, #0]
	ADD sp, sp, #4
	MOV pc, lr

.data
	prompt1: .asciz "Enter a number. The program will randomly generate a number between 1 and "
	prompt2: .asciz "the number you entered. You will then guess that number, repeatedly, until "
	prompt3: .asciz "you get it correct. The program will give you hints after each guess, and "
	prompt4: .asciz "tell you the number of guesses at the end.\n" 
	promptGuess: .asciz "Enter your guess: "
	tooLow: .asciz "Too Low.\n"
	tooHigh: .asciz "Too High.\n"
	success: .asciz "Correct. It only took you %d guesses.\n"
	formatNum: .asciz "%d"
	maxNum: .word 0
	guess: .word 0
	secretNum: .word 0
	guessCounter: .word 0
	formatOutNum: .asciz "Your number is %d"

#endmain


